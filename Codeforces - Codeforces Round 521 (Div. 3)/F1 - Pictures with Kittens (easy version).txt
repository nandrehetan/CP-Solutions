#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

typedef long long ll;
typedef vector<ll> vll;

void solve()
{
    int n, k, x;
    cin >> n >> k >> x;
    vll a(n + 1);
    for (int i = 1; i <= n; i++)
        cin >> a[i];
    int x1 = x;
    for (int i = k; i <= n; i += k)
        x1--;
    if (x1 < 0)
    {
        cout << -1 << endl;
        return;
    }
    vector<vll> dp(n + 1, vll(x + 1, -1));
    if (x == 1)
    {
        ll ans = 0;
        for (int i = 1; i <= n; i++)
        {
            if (i <= k && n - i + 1 <= k)
                ans = max(ans, a[i]);
        }
        cout << ans << endl;
        return;
    }
    dp[0][0] = 0;
    for (int i = 0; i <= n; i++)
    {
        for (int j = 0; j < x; j++)
        {
            if (dp[i][j] == -1)
                continue;
            for (int kk = i + 1; kk <= n; kk++)
            {
                if (kk > n)
                    break;
                if (kk - i > k)
                    break;
                dp[kk][j + 1] = max(dp[i][j] + a[kk], dp[kk][j + 1]);
            }
        }
    }
    ll ans = -1;
    for (int i = n - k + 1; i <= n; i++)
    {
        ans = max(ans, dp[i][x]);
    }
    cout << ans << endl;
}

int main()
{
    solve();
    return 0;
}
